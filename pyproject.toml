[tool.flake8]
max-line-length = 120
ignore = ["BLK999", "W503", "PT009"]

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.ruff]
line-length = 120
lint.select = ["E4", "E7", "E9", "F", "B", "E501"]
lint.extend-select = ["I"]

[tool.ruff.format]
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
markers = [
    "unit_test: Tests the behavior of one function (unit) in isolation from external infrastructure.",
    "integration_test: Tests the behavior of one function that integrates with external infrastructure.",
    "end_to_end_test: Tests the behavior of a full application, end-to-end."
]
testpaths = [
    "generative_handwriting/test"
]
# Skip files that contain training scripts rather than actual tests
python_files = [
    "test_*.py",
    "!test_basic_mdn.py",
    "!test_handwriting_mdn.py",
    "!test_handwriting_prediction_batched.py",
    "!test_handwriting_prediction_single_batch.py",
    "!test_handwriting_synthesis_single_batch.py",
    "!test_handwriting_synthesis_single_batch_optimized.py",
    "!test_lstm_deep_single_stroke.py",
    "!test_lstm_simple.py",
    "!test_lstm_simple_clean.py",
    "!test_lstm_simplest.py",
    "!test_mdn.py",
    "!test_mdn_simple_clean.py"
]

[tool.poetry]
name = "generating-handwriting"
version = "1.0.0"
description = "A package to recreate the seminal work of Alex Graves in handwriting synthesis."
authors = ["john <john@johnjlarkin.com>"]
readme = "README.md"
packages = [{include = "generative_handwriting"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
tensorflow = "2.18.0"
numpy = "~2.0.0"
matplotlib = "^3.10.0"
imageio = "^2.37.0"
tqdm = "^4.67.0"
scipy = "^1.14.0"
tensorboard = "^2.17.0"
svgwrite = "^1.4.3"
tensorflow-metal = "^1.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.1"
pytest = "^8.3.4"
mypy = "^1.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
